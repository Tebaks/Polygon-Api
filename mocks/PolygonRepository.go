// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	polygon "app/polygon"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PolygonRepository is an autogenerated mock type for the PolygonRepository type
type PolygonRepository struct {
	mock.Mock
}

// FindByName provides a mock function with given fields: ctx, name
func (_m *PolygonRepository) FindByName(ctx context.Context, name string) (polygon.Polygon, error) {
	ret := _m.Called(ctx, name)

	var r0 polygon.Polygon
	if rf, ok := ret.Get(0).(func(context.Context, string) polygon.Polygon); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(polygon.Polygon)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertOne provides a mock function with given fields: ctx, _a1
func (_m *PolygonRepository) InsertOne(ctx context.Context, _a1 polygon.Polygon) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, polygon.Polygon) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
